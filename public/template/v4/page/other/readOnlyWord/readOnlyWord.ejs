<template>
  <PanelLayout>
    <template slot="left-title"> 模板列表 </template>
    <template slot="left">
      <div class="left-panel">
        <div v-for="item in templateList" @click="onChangeActiveTemplate(item)" :class="{ active: activeTemplate === item.id }" :key="item.id">
          {{ item.name }}
        </div>
      </div>
    </template>
    <div class="preview-word" @drop="onModalDrop" @dragover.prevent>
      <WordModal :data="modalData" />
    </div>
    <template slot="right-title"> 模型列表 </template>
    <template slot="right">
      <RightPanel />
    </template>
  </PanelLayout>
</template>
<script>
import PanelLayout from '@/components/panelLayout/PanelLayout.vue'
import WordModal from './word/WordModal.vue'
import RightPanel from './components/RightPanel.vue'
import { uuid } from '@/utils/commonUtil'

export default {
  name: '<%= pageName%>',
  components: {
    PanelLayout,
    RightPanel,
    WordModal,
  },
  data() {
    return {
      templateList: [
        {
          id: 'jsxq1',
          name: '军事需求文档报告模板',
        },
        {
          id: uuid(),
          name: '军事战略需求文档报告模板',
        },
      ],
      activeTemplate: 'jsxq1',
      modalData: [],
      wordData: [],
    }
  },
  methods: {
    onChangeActiveTemplate(item) {
      this.activeTemplate = item.id
    },
    // 监听拖拽新增节点事件
    onModalDrop(event) {
      const screenY = event.screenY
      const data = JSON.parse(event.dataTransfer.getData('data'))
      const newModal = {
        ...data,
        modalId: data.id,
        id: uuid(),
      }
      const domList = [...document.querySelectorAll('.word-modal')]
      let addIndex = domList.length
      domList.findIndex((dom, index) => {
        const { top, height } = dom.getBoundingClientRect()
        if (top + height > screenY) {
          if (top + height / 2 < screenY) addIndex = index + 1
          else addIndex = index
        }
        return top + height > screenY
      })
      this.modalData.splice(addIndex, 0, newModal)
    },
  },
}
</script>

<style lang="less" scoped>
.preview-word {
  height: 100%;
  padding: 20px 10px 10px;
  overflow-y: auto;
}

.left-panel {
  > div {
    padding: 10px;
    border-bottom: 1px solid #d8dce5;
    cursor: pointer;

    &.active {
      color: #1e86d5;
    }
  }
}
</style>
