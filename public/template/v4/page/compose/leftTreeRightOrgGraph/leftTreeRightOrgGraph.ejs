<template>
  <div class="common-page">
    <PanelLayout ref="panelLayoutRef">
      <template v-slot:left>
        <LeftTreeList @selectChange="onSelectChange" @refreshFunctionalData="refreshFunctionalData" />
      </template>
      <OrgDiagram
        :cw="cw"
        :ch="ch"
        :defaultAngle="defaultAngle"
        :nodeTemplate="nodeTemplate"
        :defaultTemplate="defaultTemplate"
        :saveMode="saveMode"
        :addToolList="addToolList"
        :addNodeConfig="addNodeConfig"
        :nodeList="currentNodeList"
        @addNode="addNode"
        @deleteNode="deleteNode"
        @updateNode="updateNode"
        @saveDiagram="saveDiagramData"
      ></OrgDiagram>
    </PanelLayout>
  </div>
</template>

<script>
import PanelLayout from '@/components/panelLayout/PanelLayout.vue'
import LeftTreeList from './leftTreeList/<%= pageName%>LeftTreeList.vue'
import OrgDiagram from '@/components/orgDiagram/OrgDiagram.vue'
export default {
  name: '<%= pageName%>',
  data() {
    return {
      functionalData: [],
      currentNode: null,
      currentNodeList: [],
      // id、name、parentId必传值，其余可不传
      nodeList: [
        {
          lid: '1',
          id: '1',
          name: '测试数据',
          parentId: '',
          properties: {},
          sortValue: 0, //排序
          // _type: 'default', //颜色
          tag: '标签', //标签
        },
        {
          lid: '1',
          id: '1-1',
          name: '子节点1',
          parentId: '1',
          properties: {},
          sortValue: 1,
          _type: 'red',
        },
        {
          lid: '1',
          id: '1-2',
          name: '子节点2',
          parentId: '1',
          properties: {},
          sortValue: 2,
          _type: 'red',
        },
        {
          lid: '2',
          id: '2',
          name: '子节点3',
          parentId: '',
          properties: {},
          // sortValue: 3,
          _type: 'hazeBlue',
        },
      ],
      saveMode: 'save', //save【批量保存】 、 monitor【实时监听】 两种模式
      nodeTemplate: null, //nodeTemplate(), 传了nodeTemplate的情况下默认渲染nodeTemplate否则根据defaultTemplate获取
      defaultTemplate: 'default', //horizontal,vertical,default
      defaultAngle: 0, //0 水平，90 垂直显示
      // 添加按钮替换  为空数组是toolbar显示默认添加，有数据的情况替换toolbar的默认添加展示 staticParams为添加节点的默认properties
      addToolList: [
        {
          name: '添加活动',
          code: 'add',
          icon: 'el-icon-circle-plus-outline',
          staticParams: {
            equipName: '',
            equipType: '',
            _type: 'orange',
          },
        },
        {
          name: '添加装备',
          code: 'add',
          icon: 'el-icon-circle-plus-outline',
          staticParams: {
            equipName: '',
            equipType: '',
            _type: 'green',
          },
        },
      ],
      AddNodeConfig:{
        'ability': {
          matchCode: {
            id: 'abilityId',
            name: 'abilityName',
            parentId: 'parentId',
            sortValue: 'sortValue',
            _type: '_type',
          },
          template: {
            abilityId: '',
            abilityName: '活动',
            abilityCode: '',
            remark: '',
            parentId: '',
            _type: '',
            sortValue: '',
          },
          nodeLabel: '活动',
          tag: '活动tag',
          _type: 'orange',
        },
        'equip': {
          matchCode: {
            id: 'equipId',
            name: 'equipName',
            parentId: 'parentId',
            sortValue: 'sortValue',
            _type: '_type',
          },
          template: {
            equipId: '',
            equipCode: '',
            equipName: '装备',
            equipType: '',
            remark: '',
            parentId: '',
            _type: '',
            sortValue: '',
          },
          nodeLabel: '装备',
          // tag: '任务',
          _type: 'green',
        },
        'default': {
          matchCode: {
            id: 'id',
            name: 'name',
            tag: 'tag',
            parentId: 'parentId',
            sortValue: 'sortValue',
            _type: '_type',
          },
          template: {
            id: '',
            name: '',
            tag: '',
            parentId: '',
            sortValue: '',
            _type: '',
          },
          nodeLabel: '节点',
          tag: '',
          _type: 'default',
        },
      },
      cw: 0, //当前页面的宽
      ch: 0, //当前页面的高
      listData: [
        {
          id: '1',
          name: '测试1',
        },
        {
          id: '2',
          name: '测试2',
        },
      ],
    }
  },
  watch: {
    currentNode(newValue, oldValue) {
      this.currentNodeList = this.nodeList.filter((item) => item.lid == newValue.id)
    },
  },
  methods: {
    onSelectChange(nodeData) {
      this.currentNode = nodeData
    },
    queryTableData() {},
    onChangeCurrentNode(node) {
      this.currentNode = node
    },
    saveDiagramData(nodeDataArray) {
      console.log('saveDiagramData', nodeDataArray)
    },
    addNode(params) {
      // 新增节点 节点数据
      console.log('新增节点', params)
    },
    deleteNode(delIdList) {
      // 删除节点 删除节点id数组
      console.log('删除节点', delIdList)
    },
    updateNode(updateNodes) {
      // 更新节点 节点数据
      console.log('更新节点数据', updateNodes)
    },
  },
  components: {
    PanelLayout,
    LeftTreeList,
    OrgDiagram,
  },
}
</script>

<style lang="less" scoped></style>
