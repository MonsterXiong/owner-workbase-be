<template>
  <div class="common-container" ref="tableRef">
    <el-table :data="tableData" :height="tableHeight" size="mini" border style="width: 100%" v-bind="$attrs" v-on="$listeners">
    <%_ if(config?.selection?.show){ -%>
      <el-table-column type="selection" align="center" label="序号" width="80"> </el-table-column>
    <%_ } -%>
    <%_ fields.forEach(function(field){ -%>
      <el-table-column prop="<%= field.key %>" align="center" label="<%= field.label %>">
      <%_ if(field.type=='select'){ -%>
        <%_ if(field.dataType=='dictCategory'){ -%>
        <template slot-scope="scope">
          {{ $root.getEnumMeaning(dictCategory.<%= field.data %>, scope.row.<%= field.key %>) }}
        </template>
          <%_ } -%>
      <%_ } -%>
      </el-table-column>
      <%_ }); -%>
      <el-table-column label="操作" width="130" fixed="right">
        <template slot-scope="scope">
          <el-button @click="onEdit(scope.row)" type="text" size="small">编辑</el-button>
          <el-button @click="onDelete(scope.row)" class="delete-btn" type="text" size="small">删除 </el-button>
        </template>
      </el-table-column>
    </el-table>
    <div class="pagination-wrapper" ref="paginationRef">
      <el-pagination
        @size-change="handleSizeChange"
        @current-change="handleCurrentChange"
        :current-page="pageInfo.page"
        :page-sizes="[10, 20, 50, 100, 200]"
        :page-size="pageInfo.rows"
        layout="total, sizes, prev, pager, next, jumper"
        :total="total"
      >
      </el-pagination>
    </div>
  </div>
</template>

<script>
import { dictCategory } from '@/common/constants'
export default {
  props: {
    tableData: {},
    total: {},
    pageInfo: {},
  },
  data() {
    return {
      dictCategory,
      tableHeight: '500px',
    }
  },
  mounted() {
    this.$nextTick(() => {
      this.setHeight()
    })
  },
  methods: {
    setHeight() {
      this.tableHeight = this.$refs.tableRef.offsetHeight - this.$refs.paginationRef.offsetHeight + 'px'
    },
    onEdit(row) {
      this.$emit('onEdit', row)
    },
    onDelete(row) {
      this.$emit('onDelete', row)
    },
    handleSizeChange(rows) {
      this.pageInfo.rows = rows
    },
    handleCurrentChange(page) {
      this.pageInfo.page = page
    },
  },
}
</script>

<style lang="less" scoped></style>
