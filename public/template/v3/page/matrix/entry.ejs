<template>
  <MatrixTable class="table-box" :treeData="colData" :headerData="rowData" :data="relationData"></MatrixTable>
</template>

<script>
  import MatrixTable from '@/components/matrixTable/MatrixTable'
  import { <%=ServiceName %> } from '@/services'
  import { QueryConditionBuilder } from '@/utils/queryConditionBuilder'
  export default {
    name:'<%= pageName%>',
    components: {
      MatrixTable
    },
    data() {
      return {
        colData: [],
        rowData: [],
        relationData: []
      }
    },
    mounted() {
      this.initData()
    },
    methods: {
      async initData() {
        await this.getRowData()
        await this.getColData()
        await this.getRelationData()
      },
      async getRowData() {
        const queryCondition = QueryConditionBuilder.getInstanceNoPage()
        const { data } = await <%=ServiceName %>.<%=rowInfo.InterfaceName%>(queryCondition)
        this.rowData = data
        this.rowData = [{
          id: 1,
          name: '1'
        },
        {
          id: 2,
          name: '2'
        }]
      },
      async getColData() {
        const queryCondition = QueryConditionBuilder.getInstanceNoPage()
        const { data } = await <%=ServiceName %>.<%=colInfo.InterfaceName%>(queryCondition)
        this.colData = data
        this.colData = [{
          id: 3,
          name: '3'
        },
        {
          id: 4,
          name: '4'
        }]
      },
      async getRelationData() {
        const queryCondition = QueryConditionBuilder.getInstanceNoPage()
        const { data } = await <%=ServiceName %>.<%=relInfo.InterfaceName%>(queryCondition)
        this.relationData = data
        this.relationData = [{
          from: 1,
          to: 3,
          value: 'x1'
        },
        {
          from: 2,
          to: 4,
          value: 'x2'
        }]
      },
    },
  }
</script>
<style lang="less" scoped>
.table-box {
  padding: 10px 15px 0 10px;
}

::v-deep {
  .el-textarea.is-disabled .el-textarea__inner,
  .el-input.is-disabled .el-input__inner {
    background-color: transparent;
    color: inherit;
    border-color: @border-color-base;
  }
}
</style>